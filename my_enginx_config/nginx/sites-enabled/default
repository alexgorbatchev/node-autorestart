# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts
keepalive_requests 1000;

server {
	listen   80 default;
	server_name  localhost;

	access_log  /var/log/nginx/localhost.access.log;
    #access_log off;

   
#	location ~ ^/$ {
#		root   /var/www/nginx-default;
#		#root   /var/www/;
#		index  index.html index.php;
#	}

#	location /doc {
#		root   /usr/share;
#		autoindex on;
#		allow 127.0.0.1;
#		deny all;
#	}

#	location /images {
#		root   /usr/share;
#		autoindex on;
#	}

	#error_page  404  /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page   500 502 503 504  /50x.html;
	#location = /50x.html {
	#	root   /var/www/nginx-default;
	#}

	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
	#
	#location ~ \.php$ {
		#proxy_pass   http://127.0.0.1;
	#}

   # setup below some locations for your website
 
   #some paths need to be piped directry like paths with rewrite,
   # and paths you want node to serve when  nginx is the default server for it.
   location ~ ^/lib/ 
   {
#         auth_basic "Hello, please login";
 #        auth_basic_user_file /var/www/htpasswd;

         proxy_pass   http://127.0.0.1:8000; # uncomment this for this port will work for the root / of the website
         break;         
    } 

   location ~ ^/css/
   {
    #     auth_basic "Hello, please login";
     #    auth_basic_user_file /var/www/htpasswd;

         proxy_pass   http://127.0.0.1:8000;
         break;         
    } 
    
   location ~ ^/js/ # i server the css and js and images cached from memory from node js so mine is probably faster then nginx's
   {
  #       auth_basic "Hello, please login";
   #      auth_basic_user_file /var/www/htpasswd;

         proxy_pass   http://127.0.0.1:8000; 
         break;         
    } 
    
   location ~ ^/img/
   {
#         auth_basic "Hello, please login";
 #        auth_basic_user_file /var/www/htpasswd;

         proxy_pass   http://127.0.0.1:8000; 
         break;         
   } 
    

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	
	location ~ \.php$ {
    	#if ($uri !~ "^/uploads/") {
    	fastcgi_pass   127.0.0.1:9000;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  /var/www/nginx-default$fastcgi_script_name;
		include fastcgi_params;
		#}
		break;
    }

    # to reload nginx settings type:
    # nginx -s reload
    
    # i prefer this instead fle not exist rout because this should work faster.
	#location ~ \.(js|css|jpg|png|gif|html)$ {
	#	root   /var/www/nginx-default;
	#	break;
    #}

	
	# this app called data, you might want several apps.
    #location /data {
    #	proxy_pass   http://127.0.0.1:8000;
    #}

    #location ~ ^/$ {
	#	root   /var/www/nginx-default;
	#	index  index.html index.php;
    #}
    #location ~ ^/. {        
	#	root   /var/www/nginx-default;
	#	index  index.html index.php;
    #    if (!-f $request_filename) { 
    #     proxy_pass   http://127.0.0.1:8000; # uncomment this for this port will work for the root / of the website         
    #    }
    #}

    #location / {
	#	root   /var/www/nginx-default;
	#	index  index.html index.php;
    #    if (!-f $request_filename) { 
    #     proxy_pass   http://127.0.0.1:8000; # uncomment this for this port will work for the root / of the website         
    #    }
    #}

	location ~ \.(js|css|jpg|png|gif|html)$ {
		root   /var/www/nginx-default;
		break;
    }

    location / {
		root   /var/www/nginx-default;
		index  index.html index.php;
         proxy_pass   http://127.0.0.1:8000; # uncomment this for this port will work for the root / of the website         
    }


	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
		#deny  all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#listen   8000;
#listen   somename:8080;
#server_name  somename  alias  another.alias;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}


# HTTPS server
#
#server {
#listen   443;
#server_name  localhost;

#ssl  on;
#ssl_certificate  cert.pem;
#ssl_certificate_key  cert.key;

#ssl_session_timeout  5m;

#ssl_protocols  SSLv2 SSLv3 TLSv1;
#ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
#ssl_prefer_server_ciphers   on;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}
